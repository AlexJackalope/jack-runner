function ObstacleLine.new 0
push constant 4
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 3
push constant 4
call Array.new 1
pop this 0
push constant 4
call Array.new 1
pop this 1
push constant 0
pop this 2
push pointer 0
return
function ObstacleLine.addObstacle 0
push argument 0
pop pointer 0
push this 2
push constant 4
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 2
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push this 1
add
push argument 1
call SimpleWall.getCollider 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 2
push constant 1
add
pop this 2
push constant 0
return
function ObstacleLine.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function ObstacleLine.draw 2
push argument 0
pop pointer 0
push this 2
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push constant 1
sub
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call SimpleWall.draw 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ObstacleLine.erase 2
push argument 0
pop pointer 0
push this 2
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push constant 1
sub
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call SimpleWall.erase 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function ObstacleLine.tryMove 2
push argument 0
pop pointer 0
push this 3
push constant 1
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push constant 1
sub
pop local 0
push local 0
push this 0
add
pop pointer 1
push that 0
pop local 1
push local 1
call SimpleWall.tryMove 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 3
push constant 2
sub
pop this 3
push constant 0
not
return
goto IF_END0
label IF_FALSE0
push constant 0
return
label IF_END0
function ObstacleLine.getColliders 0
push argument 0
pop pointer 0
push this 1
return
function ObstacleLine.getCollidersCount 0
push argument 0
pop pointer 0
push this 2
return
